#We are using a matrix action to run different scenarios for this job
name: Run Tests

on: [push]
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildAndTestForSomePlatforms:
    name: Run Tests for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ./
        unityVersion:
          - 2021.3.9f1
        targetPlatform:
          - StandaloneWindows64 #Build a Windows 64-bit standalone.
          - StandaloneOSX #Build a macOS standalone (Intel 64-bit).
          #StandaloneLinux64 # Build a Linux 64-bit standalone.
    steps:
      - uses: actions/checkout@v2.6.0
        with:
          lfs: true
      - uses: actions/cache@v3.0.11
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: webbertakken/unity-test-runner@v2.1.1
        id: testRunner
        with:
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: ${{ matrix.projectPath }}
      - uses: actions/upload-artifact@v3.1.1
        with:
          name: Test results
          path: ${{ steps.testRunner.outputs.artifactsPath }}
